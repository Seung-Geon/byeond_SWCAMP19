/* 함수 선언문 형태는 함수 호이스팅(function hoisting)이 발생한다. */
console.log(hello('이순신'));

// 이런 형태의 함수는 미리 컴파일을 하기 때문에 인터프리터 언어임에도 불구하고, 함수가 뒤에 있어도 실행
// 이런 방식으로 밑에 있는 함수를 호출해서 실행하는 것을 끌어올려진것 같다고 해서 'hoisting'이라 한다.
function hello(name) {
    return `${name}님 반갑소!`;
}

/* 함수 표현식 형태는 함수 호이스팅이 발생하지 않는다.(에러가 발생) */
console.log(hi('피카츄'));  // hoisting X

var hi = function(name) {
    return `${name} 안녕!~`;
}

/* 
    함수 선언문은 리터럴 이전 자바스크립트(node.js)에 의해 먼저 해석된다(컴파일적인 요소)
    따라서 함수 선언문 이전에 함수를 참조할 수 있으며 호출할 수도 있다.
    함수 선언문이 코드의 선두로 끌어올려진 것처럼 작동하는 자바스크립트 고유의 특징을
    '호이스팅'이라고 한다.`
*/